looper_version: 5
repos:
  simple_2: 
    reference: simple_project_2/__replace_this_hash__
    branch: master
    auto: true
environments:
  linux:
    platform: linux
    image:
      dockerfile_contents: |
        FROM ubuntu:20.04

        RUN apt update
        RUN apt-get update
        RUN apt-get install -y python3
        RUN apt-get install -y python3-pip
        RUN pip3 install numpy==1.19
        RUN pip3 install docker==2.5.0

        RUN echo "some text" > /some_file
  k0:
    base: [linux]
    variables: { K: k0}
  k1:
    base: [linux]
    variables: { K: k1}
  k2:
    base: [linux]
    variables: { K: k2}
  env:
    base: [linux]
    variables:
      OVERRIDE_OUTPUT: ${OVERRIDE}
      OVERRIDE: ENV
      BUILD_KIND: k0
  mixin1:
    base: []
    variables:
      OVERRIDE: MIXIN_1
      BUILD_KIND: k1
  mixin2:
    base: []
    variables:
      OVERRIDE: MIXIN_2
      BUILD_KIND: k2
  env_1:
    base: [env, mixin1]
  env_2:
    base: [env, mixin2]
  env_12:
    base: [env_1, mixin2]
  env_21:
    base: [env_2, mixin1]

#three kinds of builds
builds:
  foreach:
    kind: [k0, k1, k2]
  repeat:
    build/${kind}:
      command: |
        echo ${K} > $TEST_BUILD_OUTPUT_DIR/build_output.txt
tests:
  - foreach:
      env: [env, env_1, env_2, env_12, env_21]
    repeat:
      test/${env}:
        stages:
        - command: |
            echo "${OVERRIDE_OUTPUT}" >> $TEST_OUTPUT_DIR/results.txt
            cat $TEST_INPUTS/build/build_output.txt >> $TEST_OUTPUT_DIR/results.txt
          artifacts:
            - directory: ${TEST_OUTPUT_DIR}
              format: Files
        dependencies:
          build: build/${BUILD_KIND}
  - test/test_with_repeating:
      environment: linux
      stages:
      - list_tests_command: python $TEST_INPUTS/src/testRunner.py --list > $TEST_LOOPER_TEST_LIST_OUTPUT
        run_tests_command: python $TEST_INPUTS/src/testRunner.py --run $TEST_LOOPER_TESTS_TO_RUN > $TEST_OUTPUT_DIR/testSummary.json
      dependencies:
        src: HEAD
  - test/project_a:
      environment: linux
      project: a
  - test/project_b:
      environment: linux
      project: b
test_sets:
  a: [test/project_a]
  b: [test/project_b]
triggers:
  - name: A
    paths: [ "HEAD/A*" ]
    test_sets: [ a ]
  - name: B
    paths: [ "HEAD/B*" ]
    test_sets: [ b ]