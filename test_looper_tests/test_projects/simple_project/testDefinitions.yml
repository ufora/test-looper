looper_version: 5
environments:
  linux:
    platform: linux
    image:
      dockerfile: "Dockerfile.txt"
  linux2:
    platform: linux
    image:
      dockerfile: "Dockerfile.txt"
  linux_with_a_long_name:
    platform: linux
    image:
      dockerfile: "Dockerfile.txt"
  linux_naked:
    platform: linux
    image:
      base_ami: ami-dummy
builds:
  build/linux:
    dependencies:
      src: HEAD
    command: |
      cp $TEST_INPUTS/src/build_file $TEST_BUILD_OUTPUT_DIR/build_file
tests:
  - naked/linux_naked:
      command: |
        ls src/script.py
      dependencies:
        src: HEAD
  - good/linux:
      command: "src/script.py 0"
      dependencies:
        build: build/linux
        src: HEAD
    bad/linux:
      command: "src/script.py 1"
      dependencies:
        build: build/linux
        src: HEAD
    check_build_output/linux:
      command: "cat $TEST_INPUTS/spiffy/build_file"
      dependencies:
        src: HEAD
        spiffy: build/linux
    docker/linux:
      command: "$TEST_INPUTS/src/starts_a_long_docker.py"
      dependencies:
        src: HEAD
        spiffy: build/linux
  - foreach:
      env: [linux, linux2]
    repeat:
      foreach:
        - {suffix: _1, g: Group1 }
        - {suffix: _2, g: Group2WithAVeryLongGroupName }
        - {suffix: _nogroup, g: "" }
      repeat:
        "test_with_individual_failures${suffix}/${env}":
          dependencies:
            util: HEAD/source/util
          command: |
            $TEST_INPUTS/util/produce_test_failures.py ${g} > $TEST_OUTPUT_DIR/testSummary.json

